AWSTemplateFormatVersion: "2010-09-09"

Description: for-pst-test

Parameters:
  SvAllowdCidr:
    Type: String
    Default: xxx.xxx.xxx.xxx/32
    Description: Segment to allow access to sv.

Resources:
#### VPC Setting ####
  MgmtVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.20.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: mgmt-vpc

#### IGW Setting ####
  MgmtIgw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: mgmt-igw
  VpcgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: MgmtVpc
      InternetGatewayId:
        Ref: MgmtIgw

#### Public Subnet Setting ####
## firewall subnet ##
  MgmtSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.20.1.0/24
      VpcId:
        Ref: MgmtVpc
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: mgmt-public-subnet-1a
        - Key: Type
          Value: Public

#### Route Table Setting ####

## public route table ##
  MgmtRoute:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MgmtVpc
      Tags:
        - Key: Name
          Value: mgmt-public-route
  MgmtRouteAssociationMgmtSubnet1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MgmtRoute
      SubnetId:
        Ref: MgmtSubnet1a
  MgmtRoute01:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MgmtRoute
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MgmtIgw
    DependsOn:
      - VpcgwAttachment

#### Network ACL Setting ####

## public NACL##
  MgmtPublicNacl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref MgmtVpc
      Tags: 
        - Key: Name
          Value: mgmt-public-nacl
  MgmtPublicNaclAssociationMgmtFwSubnet1a:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: !Ref MgmtPublicNacl
      SubnetId: !Ref MgmtSubnet1a
  MgmtPublicNaclEntryIn100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref MgmtPublicNacl
      RuleNumber: 100
      Protocol: -1
      RuleAction: "allow"
  MgmtPublicNaclEntryOut100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      NetworkAclId: !Ref MgmtPublicNacl
      RuleNumber: 100
      Protocol: -1
      RuleAction: "allow"

######## security group ########
  SGSV:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: pst-sg-sv
      GroupDescription: for pst-sg
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SvAllowdCidr
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref SvAllowdCidr
      VpcId: !Ref MgmtVpc
      Tags:
        - Key: Name
          Value: pst-sg

#### EC2 key pair ####
  EC2KeyPair01:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: pst-key-01

######## EC2 ########
  EC2SV:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: ami-01bef798938b7644d
      KeyName: !Ref EC2KeyPair01
      InstanceType: t2.micro
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          SubnetId: !Ref MgmtSubnet1a
          GroupSet:
            - !Ref SGSV
      UserData: !Base64 |
        #!/bin/bash
        sudo apt update -y
        sudo apt install software-properties-common -y 
        sudo apt-add-repository --yes --update ppa:ansible/ansible
        sudo apt install ansible -y
      Tags:
          - Key: Name
            Value: pst-sv